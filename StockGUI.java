package cis44project;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import javax.swing.*;
import java.util.Collections;
import java.util.Arrays;

import java.awt.*;
import java.awt.event.*;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
/**
 *
 * @author HERO
 */
public class StockGUI extends javax.swing.JFrame {
    // create a default list model
    DefaultListModel dlm2 = new DefaultListModel();
   

    FullStockList fullStockList;
   
    StockQueue stockQueue;
    
    /**
     * Creates new form StockGUI
     */
    public StockGUI() {
        fullStockList = new FullStockList();
        stockQueue = new StockQueue();
    
        initComponents();
        
        // Sync Stock Scrollbars in tandem
        BoundedRangeModel marriageTickerShares = tickerScrollPanel.getVerticalScrollBar().getModel();
        BoundedRangeModel marriageTickerEquity = tickerScrollPanel.getVerticalScrollBar().getModel();
        sharesScrollPanel.getVerticalScrollBar().setModel(marriageTickerShares);
        equityScrollPanel.getVerticalScrollBar().setModel(marriageTickerEquity);

        // Sync Watchlist Scrollbars in tandem
        //BoundedRangeModel marriageTickerWatchListPrice = WatchlistScrollPanel.getVerticalScrollBar().getModel();
       // priceWatchlistScrollPanel.getVerticalScrollBar().setModel(marriageTickerWatchListPrice);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        sortTickerButtonAsc = new javax.swing.JButton();
        sortSharesButtonAsc = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        tickerScrollPanel = new javax.swing.JScrollPane();
        tickerList = new javax.swing.JTextArea();
        sharesScrollPanel = new javax.swing.JScrollPane();
        sharesList = new javax.swing.JTextArea();
        sortTickerButtonDesc = new javax.swing.JButton();
        sortSharesButtonDesc = new javax.swing.JButton();
        equityScrollPanel = new javax.swing.JScrollPane();
        equityList = new javax.swing.JTextArea();
        sortEquityButtonAsc = new javax.swing.JButton();
        sortEquityButtonDesc = new javax.swing.JButton();
        stocksLabel = new javax.swing.JLabel();
        stocksPortfolioLabel = new javax.swing.JLabel();
        displayTotalEquityButton = new javax.swing.JButton();
        WatchlistLabel = new javax.swing.JLabel();
        displayTotalEquityScrollPanel = new javax.swing.JScrollPane();
        displayTotalEquity = new javax.swing.JTextPane();
        clearQueueButton = new javax.swing.JButton();
        q1Label = new javax.swing.JLabel();
        q2Label = new javax.swing.JLabel();
        dequeueSelectedStockButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        q2_List = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        q1_List = new javax.swing.JList<>();
        enqueueQ1ListButton = new javax.swing.JButton();
        enqueueQ2Button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setForeground(new java.awt.Color(0, 0, 0));

        sortTickerButtonAsc.setText("Sort Ticker [Ascending]");
        sortTickerButtonAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortTickerButtonAscActionPerformed(evt);
            }
        });

        sortSharesButtonAsc.setText("Sort Shares [Ascending]");
        sortSharesButtonAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortSharesButtonAscActionPerformed(evt);
            }
        });

        clearButton.setText("Sell All Stocks");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        tickerScrollPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        tickerScrollPanel.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        tickerScrollPanel.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tickerScrollPanelPropertyChange(evt);
            }
        });

        tickerList.setColumns(20);
        tickerList.setRows(5);
        tickerList.setText(fullStockList.getStockTickers());
        tickerScrollPanel.setViewportView(tickerList);

        sharesScrollPanel.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        sharesScrollPanel.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                sharesScrollPanelPropertyChange(evt);
            }
        });

        sharesList.setColumns(20);
        sharesList.setRows(5);
        sharesList.setText(fullStockList.getShares());
        sharesScrollPanel.setViewportView(sharesList);

        sortTickerButtonDesc.setText("Sort Ticker [Descending]");
        sortTickerButtonDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortTickerButtonDescActionPerformed(evt);
            }
        });

        sortSharesButtonDesc.setText("Sort Shares [Descending]");
        sortSharesButtonDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortSharesButtonDescActionPerformed(evt);
            }
        });

        equityScrollPanel.setToolTipText("");
        equityScrollPanel.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        equityList.setColumns(20);
        equityList.setRows(5);
        equityList.setText(fullStockList.getEquity());
        equityScrollPanel.setViewportView(equityList);

        sortEquityButtonAsc.setText("Sort Equity [Ascending]");
        sortEquityButtonAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortEquityButtonAscActionPerformed(evt);
            }
        });

        sortEquityButtonDesc.setText("Sort Equity [Descending]");
        sortEquityButtonDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortEquityButtonDescActionPerformed(evt);
            }
        });

        stocksLabel.setText("Stocks");

        stocksPortfolioLabel.setText("My Portfolio");

        displayTotalEquityButton.setText("Display Total Equity");
        displayTotalEquityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayTotalEquityButtonActionPerformed(evt);
            }
        });

        WatchlistLabel.setText("Watchlist");

        displayTotalEquityScrollPanel.setViewportView(displayTotalEquity);

        clearQueueButton.setText("Clear Q2");
        clearQueueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearQueueButtonActionPerformed(evt);
            }
        });

        q1Label.setText("Q1");

        q2Label.setText("Q2");

        dequeueSelectedStockButton.setText("Dequeue Selected Stock");
        dequeueSelectedStockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dequeueSelectedStockButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(q2_List);

        q1_List.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                q1_ListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(q1_List);

        enqueueQ1ListButton.setText("Enqueue Q1 with Stocks");
        enqueueQ1ListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enqueueQ1ListButtonActionPerformed(evt);
            }
        });

        enqueueQ2Button.setText("Enqueue Q2 with Selected Stock");
        enqueueQ2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enqueueQ2ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(stocksPortfolioLabel))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(19, 19, 19)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(WatchlistLabel)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(q1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(enqueueQ1ListButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(enqueueQ2Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(clearQueueButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(dequeueSelectedStockButton, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(q2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tickerScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(sortTickerButtonDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(sortTickerButtonAsc, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(sharesScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(equityScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(sortSharesButtonAsc, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(sortSharesButtonDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(sortEquityButtonDesc, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                                                .addComponent(sortEquityButtonAsc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(23, 23, 23)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(displayTotalEquityScrollPanel)
                                    .addComponent(displayTotalEquityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(stocksLabel)))))
                .addGap(0, 8, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stocksPortfolioLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(displayTotalEquityScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(displayTotalEquityButton)
                .addGap(25, 25, 25)
                .addComponent(stocksLabel)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sortTickerButtonAsc)
                    .addComponent(sortSharesButtonAsc)
                    .addComponent(sortEquityButtonAsc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sortTickerButtonDesc)
                    .addComponent(sortSharesButtonDesc)
                    .addComponent(sortEquityButtonDesc))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(sharesScrollPanel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tickerScrollPanel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(equityScrollPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clearButton)
                .addGap(18, 18, 18)
                .addComponent(WatchlistLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(q1Label)
                        .addGap(63, 63, 63)
                        .addComponent(enqueueQ1ListButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(enqueueQ2Button)
                        .addGap(13, 13, 13)
                        .addComponent(dequeueSelectedStockButton)
                        .addGap(18, 18, 18)
                        .addComponent(clearQueueButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(q2Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void sortTickerButtonDescActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        fullStockList.sortByTickerDescending();
        tickerList.setText(fullStockList.getStockTickers());
        sharesList.setText(fullStockList.getShares());
        equityList.setText(fullStockList.getEquity());
    }                                                    

    private void sharesScrollPanelPropertyChange(java.beans.PropertyChangeEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void tickerScrollPanelPropertyChange(java.beans.PropertyChangeEvent evt) {                                                 
        // Sync Stock Scrollbars in tandem

    }                                                

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // clear text
        tickerList.setText("");
        sharesList.setText("");
        equityList.setText("");
    }                                           

    private void sortSharesButtonAscActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        fullStockList.sortByShares();
        tickerList.setText(fullStockList.getStockTickers());
        sharesList.setText(fullStockList.getShares());
        equityList.setText(fullStockList.getEquity());
    }                                                   

    private void sortTickerButtonAscActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        fullStockList.sortByTicker();
        tickerList.setText(fullStockList.getStockTickers());
        sharesList.setText(fullStockList.getShares());
        equityList.setText(fullStockList.getEquity());
    }                                                   

    private void displayTotalEquityButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                         
        displayTotalEquity.setText(fullStockList.getTotalEquity());
    }                                                        

    private void sortEquityButtonDescActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        fullStockList.sortByEquityDescending();
        tickerList.setText(fullStockList.getStockTickers());
        sharesList.setText(fullStockList.getShares());
        equityList.setText(fullStockList.getEquity());
    }                                                    

    private void sortEquityButtonAscActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        fullStockList.sortByEquity();
        tickerList.setText(fullStockList.getStockTickers());
        sharesList.setText(fullStockList.getShares());
        equityList.setText(fullStockList.getEquity());
    }                                                   

    private void sortSharesButtonDescActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        fullStockList.sortBySharesDescending();
        tickerList.setText(fullStockList.getStockTickers());
        sharesList.setText(fullStockList.getShares());
        equityList.setText(fullStockList.getEquity());
    }                                                    

    private void clearQueueButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // Display q1_List with the stocks
        for(int i = 0; i < fullStockList.getNumberOfStocks(); i++)
        {
            dlm2.addElement(stockQueue.dequeue());
        } // end for
        dlm2.removeAllElements();
        q2_List.setModel(dlm2);
    }                                                

    private void dequeueSelectedStockButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                           
        // Display q1_List with the stocks
        dlm2.removeElement(stockQueue.dequeue());
        dlm2.removeElement(q2_List.getSelectedValue());
        q2_List.setModel(dlm2);
    }                                                          

    private void q1_ListMouseClicked(java.awt.event.MouseEvent evt) {                                     
        // String selected = q1_List.getSelectedValue(); // make sure it gets converted string
        // to give the selected item

    }                                    

    private void enqueueQ1ListButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // Create a defaultListModel
        DefaultListModel dlm = new DefaultListModel();

        // enqueue q1_List with every stock
        for(int i = 0; i < fullStockList.getNumberOfStocks(); i++)
        {
            stockQueue.enqueue(fullStockList.getStockList()[i]);
        } // end for

        // Display q1_List with the stocks
        for(int i = 0; i < fullStockList.getNumberOfStocks(); i++)
        {
            dlm.addElement(stockQueue.dequeue());
        } // end for
        q1_List.setModel(dlm);
    }                                                   

    private void enqueueQ2ButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                
        //DefaultListModel dlm2 = new DefaultListModel();
        dlm2.addElement(q1_List.getSelectedValue());
        q2_List.setModel(dlm2);
    }                                               

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StockGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StockGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StockGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StockGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StockGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel WatchlistLabel;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton clearQueueButton;
    private javax.swing.JButton dequeueSelectedStockButton;
    private javax.swing.JTextPane displayTotalEquity;
    private javax.swing.JButton displayTotalEquityButton;
    private javax.swing.JScrollPane displayTotalEquityScrollPanel;
    private javax.swing.JButton enqueueQ1ListButton;
    private javax.swing.JButton enqueueQ2Button;
    private javax.swing.JTextArea equityList;
    private javax.swing.JScrollPane equityScrollPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel q1Label;
    private javax.swing.JList<String> q1_List;
    private javax.swing.JLabel q2Label;
    private javax.swing.JList<String> q2_List;
    private javax.swing.JTextArea sharesList;
    private javax.swing.JScrollPane sharesScrollPanel;
    private javax.swing.JButton sortEquityButtonAsc;
    private javax.swing.JButton sortEquityButtonDesc;
    private javax.swing.JButton sortSharesButtonAsc;
    private javax.swing.JButton sortSharesButtonDesc;
    private javax.swing.JButton sortTickerButtonAsc;
    private javax.swing.JButton sortTickerButtonDesc;
    private javax.swing.JLabel stocksLabel;
    private javax.swing.JLabel stocksPortfolioLabel;
    private javax.swing.JTextArea tickerList;
    private javax.swing.JScrollPane tickerScrollPanel;
    // End of variables declaration                   
}
